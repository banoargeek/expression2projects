@name TTS_Togglable
@inputs 
@outputs HideChat
@persist [LS, Quee]:array
@trigger 

#CREDIT TO JORCA FOR TTS, EDITED BY MAJOR

#KEY: LS = LastSaid: The last thing the owner said in global chat.

#Initialization
runOnChat(1)
interval(1)
if (first() | dupefinished())
{
    HideChat = 0
}

#Chat Clk check and Variable Declaration
if (chatClk(owner()))
{
    LS = owner():lastSaid():lower():explode(" ") 
    
    #Chat Command Check and utilities
    if (LS[1,string] == "/tts" | LS[1,string] == "/t")
    {
        hideChat(1)
        
        #Check if the count is greater than 1, else toggle chat Visbility.
        if (LS:count() > 1)
        {
        #PLACEHOLDER FRAMEWORK
        }
        #Toggle Chat Visibility.
        else
        {
            HideChat = !HideChat
            if (HideChat)
            {
                print("TTS: Chat is Hidden!")
            }
            else
            {
                print("TTS: Chat is Visible!")
            }
        }
    }
    #If result is NOT a chat command, push to queue.
    else
    {
        Quee:pushString(LS:concat(" "))
    }

    #HideChat Check
    if (HideChat)
    {
        hideChat(1)
    }
}

#Stream Call and utilities
if (streamCanStart())
{
    local S = Quee[1,string]
    Quee:shift()
    if (S:length()>=1)
    {
        owner():streamStart(2,"https://translate.google.com/translate_tts?ie=UTF-8&tl=en-gb&client=tw-ob&q="+S)
    }
}
